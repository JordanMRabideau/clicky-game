{"version":3,"sources":["components/portrait/index.js","components/navbar/index.js","components/jumbotron/index.js","App.js","index.js"],"names":["Portrait","props","react_default","a","createElement","className","onClick","src","image","alt","id","Navbar","score","highScore","Jumbotron","App","state","characters","clicked","shufflePortraits","newOrder","sort","b","Math","random","_this","setState","componentDidMount","resetGame","handleClick","event","console","log","portraitId","target","includes","alert","concat","length","newScore","push","_this2","this","navbar","jumbotron","map","character","components_portrait","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"y0BAWeA,MARf,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAAwCC,QAASL,EAAMK,SAClEJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKN,EAAMO,MAAOC,IAAKR,EAAMS,cCS/BC,MAbf,SAAgBV,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,UAAoCJ,EAAMW,MAA1C,kBAAgEX,EAAMY,eCMvEC,MAZf,SAAmBb,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,kEACAF,EAAAC,EAAAC,cAAA,yCCkFOW,6MAjFbC,MAAQ,CACNC,aACAL,MAAO,EACPC,UAAW,EACXK,QAAS,MAGXC,iBAAmB,WACjB,IAAIC,EAAWH,EACfG,EAASC,KAAK,SAASlB,EAAGmB,GACxB,MAAO,GAAMC,KAAKC,WAEpBC,EAAKC,SAAS,CACZT,WAAYG,OAIhBO,kBAAoB,WAClBF,EAAKN,sBAGPS,UAAY,WACVH,EAAKC,SAAS,CACZd,MAAO,IAETa,EAAKN,sBAIPU,YAAc,SAACC,GACbC,QAAQC,IAAIP,EAAKT,MAAMJ,OACvB,IAAMqB,EAAaH,EAAMI,OAAOzB,IAChC,GAAKgB,EAAKT,MAAME,QAAQiB,SAASF,GActBR,EAAKT,MAAME,QAAQiB,SAASF,IACrCG,MAAK,qCAAAC,OAAsCZ,EAAKT,MAAMJ,MAAjD,uBAAAyB,OAA4EZ,EAAKT,MAAMH,YAC5FY,EAAKG,aACIH,EAAKT,MAAMJ,QAAUa,EAAKT,MAAMC,WAAWqB,SACpDF,MAAM,sCACNX,EAAKG,iBAnBuC,CAC5C,IACIW,EADWd,EAAKT,MAAMJ,MACA,EACtBa,EAAKT,MAAMH,UAAY0B,GACzBd,EAAKC,SAAS,CACZb,UAAW0B,IAGfd,EAAKT,MAAME,QAAQsB,KAAKP,GACxBR,EAAKN,mBACLM,EAAKC,SAAS,CACZd,MAAO2B,8EAYJ,IAAAE,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuC,EAAD,CACE/B,MAAO8B,KAAK1B,MAAMJ,MAClBC,UAAW6B,KAAK1B,MAAMH,YAExBX,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACZY,EAAW4B,IAAI,SAAAC,GAAS,OACvB5C,EAAAC,EAAAC,cAAC2C,EAAD,CACArC,GAAIoC,EAAUpC,GACdF,MAAOsC,EAAUtC,MACjBwC,IAAKF,EAAUpC,GACfJ,QAASmC,EAAKZ,0BAxEVoB,aCHlBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7a2fcbaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./index.css\"\r\n\r\nfunction Portrait(props) {\r\n    return (\r\n        <div className=\"card shadow p-3 mb-5 bg-white rounded\" onClick={props.onClick}>\r\n            <img src={props.image} alt={props.id}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Portrait;","import React from 'react';\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div className=\"sticky-top\">\r\n            <nav className=\"navbar navbar-dark bg-primary\">\r\n              <span className=\"navbar-brand mb-0 h1\">Clicky Game!</span>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <h2 className=\"navbar-text\">Score: {props.score} | High Score: {props.highScore}</h2>\r\n              </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Jumbotron(props) {\r\n    return (\r\n      <div className=\"jumbotron text-center\">\r\n        <h1>Arrested Development Memory Game</h1>\r\n        <h4>Try to click all of the portraits without clicking the same one twice</h4>\r\n        <h4>Every time you click one, the portraits will shuffle</h4>\r\n        <h5>Click a portrait to start</h5>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default Jumbotron","import React, { Component } from 'react';\nimport './App.css';\nimport Portrait from \"./components/portrait/\"\nimport characters from \"./characters.json\"\nimport Navbar from \"./components/navbar\"\nimport Jumbotron from \"./components/jumbotron\"\n\nclass App extends Component {\n  \n  state = {\n    characters,\n    score: 0,\n    highScore: 0,\n    clicked: []\n  }\n  \n  shufflePortraits = () => {\n    let newOrder = characters;\n    newOrder.sort(function(a, b) {\n      return 0.5 - Math.random()\n    });\n    this.setState({\n      characters: newOrder\n    });\n  }\n\n  componentDidMount = () => {\n    this.shufflePortraits()\n  }\n\n  resetGame = () => {\n    this.setState({\n      score: 0\n    });\n    this.shufflePortraits()\n  }\n\n\n  handleClick = (event) => {\n    console.log(this.state.score)\n    const portraitId = event.target.alt\n    if (!this.state.clicked.includes(portraitId)) {\n      let oldScore = this.state.score\n      let newScore = oldScore + 1\n      if (this.state.highScore < newScore) {\n        this.setState({\n          highScore: newScore\n        });\n      };\n      this.state.clicked.push(portraitId);\n      this.shufflePortraits();\n      this.setState({\n        score: newScore\n      })\n     \n    } else if (this.state.clicked.includes(portraitId)) {\n      alert(`You lose, try again!\\nYour score: ${this.state.score}\\nYour high score: ${this.state.highScore}`)\n      this.resetGame()\n    } else if (this.state.score === this.state.characters.length) {\n      alert(\"You win! Click 'OK' to play again.\")\n      this.resetGame()\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n        <Jumbotron />\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            {characters.map(character => (\n              <Portrait\n              id={character.id}\n              image={character.image}\n              key={character.id}\n              onClick={this.handleClick}\n              />\n            ))}\n          </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}